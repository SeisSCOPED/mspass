<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_error_logger_8h" kind="file" language="C++">
    <compoundname>ErrorLogger.h</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">list</includes>
    <includes local="no">boost/archive/basic_archive.hpp</includes>
    <includes local="no">boost/archive/text_iarchive.hpp</includes>
    <includes local="no">boost/archive/text_oarchive.hpp</includes>
    <includes local="no">boost/serialization/serialization.hpp</includes>
    <includes local="no">boost/serialization/list.hpp</includes>
    <includes refid="_ms_p_a_s_s_error_8h" local="yes">mspass/utility/MsPASSError.h</includes>
    <includes refid="_error_logger_8h" local="yes">mspass/utility/ErrorLogger.h</includes>
    <includedby refid="mspass_8h" local="yes">/home/travis/build/wangyinz/mspass/cxx/include/mspass/mspass.h</includedby>
    <includedby refid="_seismogram_8h" local="yes">/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/Seismogram.h</includedby>
    <includedby refid="_error_logger_8h" local="yes">/home/travis/build/wangyinz/mspass/cxx/include/mspass/utility/ErrorLogger.h</includedby>
    <includedby refid="_processing_history_8h" local="yes">/home/travis/build/wangyinz/mspass/cxx/include/mspass/utility/ProcessingHistory.h</includedby>
    <includedby refid="_error_logger_8cc" local="yes">/home/travis/build/wangyinz/mspass/cxx/src/lib/utility/ErrorLogger.cc</includedby>
    <incdepgraph>
      <node id="623">
        <label>list</label>
      </node>
      <node id="625">
        <label>boost/archive/text_iarchive.hpp</label>
      </node>
      <node id="631">
        <label>exception</label>
      </node>
      <node id="626">
        <label>boost/archive/text_oarchive.hpp</label>
      </node>
      <node id="622">
        <label>unistd.h</label>
      </node>
      <node id="629">
        <label>mspass/utility/MsPASSError.h</label>
        <link refid="_ms_p_a_s_s_error_8h_source"/>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
      </node>
      <node id="630">
        <label>iostream</label>
      </node>
      <node id="628">
        <label>boost/serialization/list.hpp</label>
      </node>
      <node id="621">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/utility/ErrorLogger.h</label>
        <link refid="_error_logger_8h"/>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="627" relation="include">
        </childnode>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
      </node>
      <node id="627">
        <label>boost/serialization/serialization.hpp</label>
      </node>
      <node id="624">
        <label>boost/archive/basic_archive.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="640">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/utility/ProcessingHistory.h</label>
        <link refid="_processing_history_8h_source"/>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
      <node id="642">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/TimeSeriesWGaps.h</label>
        <link refid="_time_series_w_gaps_8h_source"/>
      </node>
      <node id="637">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/Ensemble.h</label>
        <link refid="_ensemble_8h_source"/>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
      </node>
      <node id="634">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/Seismogram.h</label>
        <link refid="_seismogram_8h_source"/>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
      </node>
      <node id="635">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/algorithms/algorithms.h</label>
        <link refid="algorithms_8h_source"/>
      </node>
      <node id="636">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/algorithms/amplitudes.h</label>
        <link refid="amplitudes_8h_source"/>
      </node>
      <node id="633">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/mspass.h</label>
        <link refid="mspass_8h_source"/>
      </node>
      <node id="638">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/SeismogramWGaps.h</label>
        <link refid="_seismogram_w_gaps_8h_source"/>
      </node>
      <node id="632">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/utility/ErrorLogger.h</label>
        <link refid="_error_logger_8h"/>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
      </node>
      <node id="641">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/TimeSeries.h</label>
        <link refid="_time_series_8h_source"/>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
      </node>
      <node id="639">
        <label>/home/travis/build/wangyinz/mspass/cxx/include/mspass/seismic/Taper.h</label>
        <link refid="_taper_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmspass_1_1utility_1_1_log_data" prot="public">mspass::utility::LogData</innerclass>
    <innerclass refid="classmspass_1_1utility_1_1_error_logger" prot="public">mspass::utility::ErrorLogger</innerclass>
    <innernamespace refid="namespacemspass">mspass</innernamespace>
    <innernamespace refid="namespacemspass_1_1utility">mspass::utility</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_ERROR_LOGGER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ERROR_LOGGER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/basic_archive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/text_iarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/archive/text_oarchive.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/serialization/serialization.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/serialization/list.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mspass/utility/MsPASSError.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mspass/utility/ErrorLogger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemspass" kindref="compound">mspass</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">utility{</highlight></codeline>
<codeline lineno="15" refid="classmspass_1_1utility_1_1_log_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmspass_1_1utility_1_1_log_data" kindref="compound">LogData</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>job_id;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p_id;<sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>of<sp/>getpid()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>std::string<sp/>algorithm;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>mspass::utility::ErrorSeverity<sp/>badness;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>std::string<sp/>message;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_log_data" kindref="compound">LogData</ref>(){};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_log_data" kindref="compound">LogData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>alg,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error" kindref="compound">mspass::utility::MsPASSError</ref>&amp;<sp/>merr);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_log_data" kindref="compound">LogData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>alg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mspass::utility::ErrorSeverity<sp/>lvl);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;,<sp/><ref refid="classmspass_1_1utility_1_1_log_data" kindref="compound">LogData</ref>&amp;);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>boost::serialization::access;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>ar,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>job_id;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>p_id;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>algorithm;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>badness;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>message;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60" refid="classmspass_1_1utility_1_1_error_logger" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref>(){job_id=0;};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>job)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>job_id=job;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref>&amp;<sp/>parent);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_job_id(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jid){job_id=jid;};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_job_id(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>job_id;};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error" kindref="compound">mspass::utility::MsPASSError</ref>&amp;<sp/>merr);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>alg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mess,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mspass::utility::ErrorSeverity<sp/>level);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_verbose(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>alg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>mess);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>std::list&lt;LogData&gt;<sp/>get_error_log()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allmessages;};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>allmessages.size();};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_error_logger" kindref="compound">ErrorLogger</ref>&amp;<sp/>parent);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>std::list&lt;LogData&gt;<sp/>worst_errors()</highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>job_id;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::list&lt;LogData&gt;<sp/>allmessages;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>boost::serialization::access;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>ar,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>job_id;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>allmessages;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tdata&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>data_are_valid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tdata&amp;<sp/>d)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d.dead())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>std::list&lt;LogData&gt;<sp/>welog;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>welog=d.elog.worst_errors();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*The<sp/>return<sp/>will<sp/>be<sp/>empty<sp/>if<sp/>there<sp/>are<sp/>no<sp/>errors<sp/>logged*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(welog.size()&lt;=0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_log_data" kindref="compound">LogData</ref><sp/>ld;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Worst<sp/>errors<sp/>can<sp/>return<sp/>a<sp/>list<sp/>of<sp/>multiple<sp/>entries.<sp/><sp/>For</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>fatal<sp/>or<sp/>invalid<sp/>id<sp/>should<sp/>never<sp/>be<sp/>more<sp/>than<sp/>one,<sp/>but<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/>a<sp/>clean<sp/>way<sp/>to<sp/>extract<sp/>the<sp/>first<sp/>member<sp/>of<sp/>the<sp/>list<sp/>if<sp/>it<sp/>isn&apos;t<sp/>empty*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>ld=*(welog.begin());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ld.badness<sp/>==<sp/>ErrorSeverity::Fatal<sp/>||<sp/>ld.badness<sp/>==<sp/>ErrorSeverity::Invalid)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>utility<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>mspass<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/wangyinz/mspass/cxx/include/mspass/utility/ErrorLogger.h"/>
  </compounddef>
</doxygen>
