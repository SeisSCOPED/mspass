<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_metadata_8h" kind="file" language="C++">
    <compoundname>Metadata.h</compoundname>
    <includes local="no">typeinfo</includes>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes local="no">list</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">boost/any.hpp</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes refid="_ms_p_a_s_s_error_8h" local="yes">mspass/utility/MsPASSError.h</includes>
    <includes refid="_basic_metadata_8h" local="yes">mspass/utility/BasicMetadata.h</includes>
    <includedby refid="mspass_8h" local="yes">/home/runner/work/mspass/mspass/cxx/include/mspass/mspass.h</includedby>
    <includedby refid="_core_seismogram_8h" local="yes">/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/CoreSeismogram.h</includedby>
    <includedby refid="_core_time_series_8h" local="yes">/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/CoreTimeSeries.h</includedby>
    <includedby refid="_antelope_pf_8h" local="yes">/home/runner/work/mspass/mspass/cxx/include/mspass/utility/AntelopePf.h</includedby>
    <includedby refid="_attribute_cross_reference_8h" local="yes">/home/runner/work/mspass/mspass/cxx/include/mspass/utility/AttributeCrossReference.h</includedby>
    <includedby refid="_attribute_map_8h" local="yes">/home/runner/work/mspass/mspass/cxx/include/mspass/utility/AttributeMap.h</includedby>
    <includedby refid="_core_time_series_8cc" local="yes">/home/runner/work/mspass/mspass/cxx/src/lib/seismic/CoreTimeSeries.cc</includedby>
    <includedby refid="_attribute_map_8cc" local="yes">/home/runner/work/mspass/mspass/cxx/src/lib/utility/AttributeMap.cc</includedby>
    <includedby refid="_metadata_8cc" local="yes">/home/runner/work/mspass/mspass/cxx/src/lib/utility/Metadata.cc</includedby>
    <includedby refid="metadata__helpers_8cc" local="yes">/home/runner/work/mspass/mspass/cxx/src/lib/utility/metadata_helpers.cc</includedby>
    <incdepgraph>
      <node id="647">
        <label>list</label>
      </node>
      <node id="653">
        <label>mspass/utility/MsPASSError.h</label>
        <link refid="_ms_p_a_s_s_error_8h_source"/>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="656">
        <label>string</label>
      </node>
      <node id="645">
        <label>map</label>
      </node>
      <node id="654">
        <label>exception</label>
      </node>
      <node id="649">
        <label>fstream</label>
      </node>
      <node id="651">
        <label>boost/any.hpp</label>
      </node>
      <node id="655">
        <label>mspass/utility/BasicMetadata.h</label>
        <link refid="_basic_metadata_8h_source"/>
        <childnode refid="656" relation="include">
        </childnode>
      </node>
      <node id="644">
        <label>typeinfo</label>
      </node>
      <node id="650">
        <label>sstream</label>
      </node>
      <node id="652">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="648">
        <label>iostream</label>
      </node>
      <node id="646">
        <label>set</label>
      </node>
      <node id="643">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/utility/Metadata.h</label>
        <link refid="_metadata_8h"/>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="666">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/CoreTimeSeries.h</label>
        <link refid="_core_time_series_8h_source"/>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
      </node>
      <node id="671">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/utility/AttributeCrossReference.h</label>
        <link refid="_attribute_cross_reference_8h_source"/>
        <childnode refid="658" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/SeismogramWGaps.h</label>
        <link refid="_seismogram_w_gaps_8h_source"/>
      </node>
      <node id="670">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/utility/AttributeMap.h</label>
        <link refid="_attribute_map_8h_source"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
      </node>
      <node id="661">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/algorithms.h</label>
        <link refid="algorithms_8h_source"/>
      </node>
      <node id="662">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/algorithms/amplitudes.h</label>
        <link refid="amplitudes_8h_source"/>
      </node>
      <node id="667">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/TimeSeries.h</label>
        <link refid="_time_series_8h_source"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="668">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/TimeSeriesWGaps.h</label>
        <link refid="_time_series_w_gaps_8h_source"/>
      </node>
      <node id="659">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/CoreSeismogram.h</label>
        <link refid="_core_seismogram_8h_source"/>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
      <node id="663">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Ensemble.h</label>
        <link refid="_ensemble_8h_source"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="658">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/mspass.h</label>
        <link refid="mspass_8h_source"/>
      </node>
      <node id="669">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/utility/AntelopePf.h</label>
        <link refid="_antelope_pf_8h_source"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
      </node>
      <node id="660">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Seismogram.h</label>
        <link refid="_seismogram_8h_source"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/seismic/Taper.h</label>
        <link refid="_taper_8h_source"/>
      </node>
      <node id="657">
        <label>/home/runner/work/mspass/mspass/cxx/include/mspass/utility/Metadata.h</label>
        <link refid="_metadata_8h"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmspass_1_1utility_1_1_metadata_get_error" prot="public">mspass::utility::MetadataGetError</innerclass>
    <innerclass refid="classmspass_1_1utility_1_1_metadata" prot="public">mspass::utility::Metadata</innerclass>
    <innerclass refid="structmspass_1_1utility_1_1_metadata__typedef" prot="public">mspass::utility::Metadata_typedef</innerclass>
    <innernamespace refid="namespacemspass">mspass</innernamespace>
    <innernamespace refid="namespacemspass_1_1utility">mspass::utility</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_METADATA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_METADATA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/any.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mspass/utility/MsPASSError.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mspass/utility/BasicMetadata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemspass" kindref="compound">mspass</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">utility{</highlight></codeline>
<codeline lineno="22" refid="classmspass_1_1utility_1_1_metadata_get_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error" kindref="compound">MsPASSError</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>():<ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a19f527c5f3f2e761e51c9b2d478d02c6" kindref="member">MsPASSError</ref>(){};<sp/></highlight><highlight class="comment">//<sp/>seems<sp/>necessary<sp/>to<sp/>not<sp/>default<sp/>this<sp/>with<sp/>gcc</highlight></codeline>
<codeline lineno="29" refid="classmspass_1_1utility_1_1_metadata_get_error_1abed3080ca93a137df98dc3586b8ac777" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error_1abed3080ca93a137df98dc3586b8ac777" kindref="member">MetadataGetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Texpected)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>pretty_name(boost::core::demangle(Texpected));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ss&lt;&lt;</highlight><highlight class="stringliteral">&quot;Error<sp/>trying<sp/>to<sp/>extract<sp/>Metadata<sp/>with<sp/>key=&quot;</highlight><highlight class="normal">&lt;&lt;key&lt;&lt;std::endl</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>value<sp/>associated<sp/>with<sp/>this<sp/>key<sp/>is<sp/>set<sp/>in<sp/>Metadata<sp/>object&quot;</highlight><highlight class="normal">&lt;&lt;std::endl</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>an<sp/>entry<sp/>of<sp/>type=&quot;</highlight><highlight class="normal">&lt;&lt;pretty_name&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a47e9d74154f088f38fd7e5219abc81f5" kindref="member">message</ref>=ss.str();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1af808615110822967a251108b20708f51" kindref="member">badness</ref>=ErrorSeverity::Suspect;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45" refid="classmspass_1_1utility_1_1_metadata_get_error_1a8e9ab0f856d4936e98fd614da5e83ff9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error_1a8e9ab0f856d4936e98fd614da5e83ff9" kindref="member">MetadataGetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*boostmessage,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Texpected,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Tactual)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Metadata<sp/>get<sp/>method.<sp/><sp/><sp/>Type<sp/>mismatch<sp/>in<sp/>attem<sp/>to<sp/>get<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>with<sp/>key=&quot;</highlight><highlight class="normal">&lt;&lt;key&lt;&lt;std::endl</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;boost::any<sp/>bad_any_cast<sp/>wrote<sp/>this<sp/>message:<sp/><sp/>&quot;</highlight><highlight class="normal">&lt;&lt;std::endl</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>boostmessage&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name_e(boost::core::demangle(Texpected));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>convert<sp/>to<sp/>data<sp/>of<sp/>type=&quot;</highlight><highlight class="normal">&lt;&lt;name_e&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name_a(boost::core::demangle(Tactual));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Actual<sp/>entry<sp/>has<sp/>type=&quot;</highlight><highlight class="normal">&lt;&lt;name_a&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a47e9d74154f088f38fd7e5219abc81f5" kindref="member">message</ref>=ss.str();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1af808615110822967a251108b20708f51" kindref="member">badness</ref>=ErrorSeverity::Suspect;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>parent)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a47e9d74154f088f38fd7e5219abc81f5" kindref="member">message</ref>=parent.<ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a47e9d74154f088f38fd7e5219abc81f5" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1af808615110822967a251108b20708f51" kindref="member">badness</ref>=parent.<ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1af808615110822967a251108b20708f51" kindref="member">badness</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>parent)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">!=&amp;parent)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a47e9d74154f088f38fd7e5219abc81f5" kindref="member">message</ref>=parent.<ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1a47e9d74154f088f38fd7e5219abc81f5" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1af808615110822967a251108b20708f51" kindref="member">badness</ref>=parent.<ref refid="classmspass_1_1utility_1_1_ms_p_a_s_s_error_1af808615110822967a251108b20708f51" kindref="member">badness</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classmspass_1_1utility_1_1_metadata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_basic_metadata" kindref="compound">BasicMetadata</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80" refid="classmspass_1_1utility_1_1_metadata_1a4a87cd6a6f8fc5cdbee65cb85958cb2c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a4a87cd6a6f8fc5cdbee65cb85958cb2c" kindref="member">Metadata</ref>(){};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>(std::ifstream&amp;<sp/>ifs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>form=std::string(</highlight><highlight class="stringliteral">&quot;pf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>mdold);</highlight></codeline>
<codeline lineno="104" refid="classmspass_1_1utility_1_1_metadata_1a6d06560c0b169240031c6a274dc7990f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a6d06560c0b169240031c6a274dc7990f" kindref="member">~Metadata</ref>(){};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>mdold);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref><sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>the<sp/>getters<sp/>-<sp/>all<sp/>but<sp/>the<sp/>template<sp/>are<sp/>wrappers<sp/>with<sp/>the<sp/>type</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>fixed<sp/>*/</highlight></codeline>
<codeline lineno="135" refid="classmspass_1_1utility_1_1_metadata_1ad69a5786d997104df560775f4f688b02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1ad69a5786d997104df560775f4f688b02" kindref="member">get_double</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val=get&lt;double&gt;(key);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>merr)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>a<sp/>float<sp/>if<sp/>that<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fval;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fval=get&lt;float&gt;(key);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fval;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>merr)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>merr;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="159" refid="classmspass_1_1utility_1_1_metadata_1a78f3a01e1b1deccd84a0833bea4ef462" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a78f3a01e1b1deccd84a0833bea4ef462" kindref="member">get_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=get&lt;int&gt;(key);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>merr)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lval;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lval=get&lt;long&gt;(key);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lval);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>merr)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>merr;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="184" refid="classmspass_1_1utility_1_1_metadata_1a7ace0c05ebb00b3c383cb8cccd225504" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a7ace0c05ebb00b3c383cb8cccd225504" kindref="member">get_long</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=get&lt;long&gt;(key);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>merr)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ival;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ival=get&lt;int&gt;(key);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ival);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>&amp;<sp/>merr)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>merr;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="213" refid="classmspass_1_1utility_1_1_metadata_1aa56da98a52f03babd67bf9fb55c40f3a" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classmspass_1_1utility_1_1_metadata_1aa56da98a52f03babd67bf9fb55c40f3a" kindref="member">get_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>val;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val=get&lt;std::string&gt;(key);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="228" refid="classmspass_1_1utility_1_1_metadata_1a2631da9d437572ee0781ed9bd96a3ed3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a2631da9d437572ee0781ed9bd96a3ed3" kindref="member">get_bool</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val=get&lt;bool&gt;(key);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265" refid="classmspass_1_1utility_1_1_metadata_1a5d6876ed25c3f5d93052239ec828a3c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>val;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val=get&lt;T&gt;(std::string(key));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(...){</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283" refid="classmspass_1_1utility_1_1_metadata_1a991516933477580b6b59dd578819df06" refkind="member"><highlight class="normal"><sp/><sp/>boost::any<sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a991516933477580b6b59dd578819df06" kindref="member">get_any</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,boost::any&gt;::const_iterator<sp/>iptr;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>iptr=md.find(key);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iptr==md.end())</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>(key,</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(boost::any).name());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iptr-&gt;second;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>std::string<sp/>type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/>T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::any<sp/>aval=val;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>md[key]=aval;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>changed_or_set.insert(key);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>could<sp/>do<sp/>this<sp/>as<sp/>put(string(key),val)<sp/>but<sp/>this<sp/>is<sp/>so<sp/>trivial<sp/>duplicating</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>code<sp/>for<sp/>the<sp/>string<sp/>method<sp/>is<sp/>more<sp/>efficient<sp/>than<sp/>an<sp/>added<sp/>function<sp/>call.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::any<sp/>aval=val;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>md[std::string(key)]=aval;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>changed_or_set.insert(std::string(key));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="308"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;put&lt;double&gt;(key,val);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="312"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;put&lt;int&gt;(key,val);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="316"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;put&lt;bool&gt;(key,val);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>val)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;put&lt;std::string&gt;(key,val);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_object(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pybind11::object<sp/>val)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;put&lt;pybind11::object&gt;(key,val);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_int(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;put&lt;int&gt;(key,val);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>val)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;put&lt;std::string&gt;(key,val);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_bool(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;put&lt;bool&gt;(key,val);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_double(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;put&lt;double&gt;(key,val);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_long(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;put&lt;long&gt;(key,val);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_chain(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>val,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>separator=std::string(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="classmspass_1_1utility_1_1_metadata_1a0fec2640022e944afe1ae1180e741da5" refkind="member"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a0fec2640022e944afe1ae1180e741da5" kindref="member">modified</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="375"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>changed_or_set;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="388" refid="classmspass_1_1utility_1_1_metadata_1a610962d5ca59e48d1b2833e613bbad1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_1a610962d5ca59e48d1b2833e613bbad1d" kindref="member">clear_modified</ref>()</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>changed_or_set.clear();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/>keys()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_defined(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/>bool<sp/>is_defined(const<sp/>char*<sp/>key)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>this-&gt;is_defined(string(key));</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/>};</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/>*/</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/>void<sp/>clear(const<sp/>char*<sp/>key)</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>this-&gt;clear(string(key));</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/>};</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/>*/</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>std::size_t<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,boost::any&gt;::const_iterator<sp/><sp/>begin()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,boost::any&gt;::const_iterator<sp/><sp/>end()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>change_key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>oldkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>newkey);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostringstream&amp;<sp/>operator&lt;&lt;(std::ostringstream&amp;,<sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">mspass::utility::Metadata</ref>&amp;);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,boost::any&gt;<sp/>md;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>keys<sp/>of<sp/>any<sp/>entry<sp/>changed<sp/>will<sp/>be<sp/>contained<sp/>here.<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>std::set&lt;std::string&gt;<sp/>changed_or_set;</highlight></codeline>
<codeline lineno="439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="440" refid="classmspass_1_1utility_1_1_metadata_1af2b1cac0f295d9ab5fb240b8b5e12539" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>T<sp/><ref refid="classmspass_1_1utility_1_1_metadata_1af2b1cac0f295d9ab5fb240b8b5e12539" kindref="member">Metadata::get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,boost::any&gt;::const_iterator<sp/>iptr;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>iptr=md.find(key);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iptr==md.end())</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>(key,</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>boost::any<sp/>aval=iptr-&gt;second;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>result=boost::any_cast&lt;T&gt;(aval);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(boost::bad_any_cast&amp;<sp/>err)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info<sp/>&amp;ti<sp/>=<sp/>aval.type();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata_get_error" kindref="compound">MetadataGetError</ref>(err.what(),key,</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name(),ti.name());</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal">std::string<sp/>demangled_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::any<sp/>val);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>Start<sp/>of<sp/>helper<sp/>procedures<sp/>for<sp/>Metadata.<sp/>*/</highlight></codeline>
<codeline lineno="477"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>MDtype{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>Real,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>Real32,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>Double,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>Real64,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>Integer,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>Int32,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>Long,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>Int64,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>String,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>Boolean,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>Double_Array,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>Invalid</highlight></codeline>
<codeline lineno="490"><highlight class="normal">};</highlight></codeline>
<codeline lineno="494" refid="structmspass_1_1utility_1_1_metadata__typedef" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmspass_1_1utility_1_1_metadata__typedef" kindref="compound">Metadata_typedef</ref><sp/>{</highlight></codeline>
<codeline lineno="495" refid="structmspass_1_1utility_1_1_metadata__typedef_1a7af59256cae2e29c493e0f93345432d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structmspass_1_1utility_1_1_metadata__typedef_1a7af59256cae2e29c493e0f93345432d2" kindref="member">tag</ref>;<sp/></highlight></codeline>
<codeline lineno="496" refid="structmspass_1_1utility_1_1_metadata__typedef_1ab87b43a6303ebdeb634d784f87809918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>MDtype<sp/><ref refid="structmspass_1_1utility_1_1_metadata__typedef_1ab87b43a6303ebdeb634d784f87809918" kindref="member">mdt</ref>;<sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal">}<sp/><ref refid="structmspass_1_1utility_1_1_metadata__typedef" kindref="compound">Metadata_typedef</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::list&lt;Metadata_typedef&gt;<sp/>MetadataList;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copy_selected_metadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>mdin,<sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>mdout,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetadataList&amp;<sp/>mdlist);</highlight></codeline>
<codeline lineno="555"><highlight class="normal">std::string<sp/>serialize_metadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref>&amp;<sp/>md);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><ref refid="classmspass_1_1utility_1_1_metadata" kindref="compound">Metadata</ref><sp/>restore_serialized_metadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>utility<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//End<sp/>of<sp/>namespace<sp/>MsPASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/mspass/mspass/cxx/include/mspass/utility/Metadata.h"/>
  </compounddef>
</doxygen>
